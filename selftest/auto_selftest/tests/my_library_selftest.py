#!/usr/bin/env python
# coding=utf-8
"""
This file contains regression test_repo automatically generated by
``stbt auto-selftest``. These test_repo are intended to capture the
behaviour of Frame Objects (and other helper functions that operate on
a video-frame). Commit this file to git, re-run ``stbt auto-selftest``
whenever you make a change to your Frame Objects, and use ``git diff``
to see how your changes affect the behaviour of the Frame Object.

NOTE: THE OUTPUT OF THE DOCTESTS BELOW IS NOT NECESSARILY "CORRECT" --
it merely documents the behaviour at the time that
``stbt auto-selftest`` was run.
"""
# pylint: disable=line-too-long

import os
import sys

sys.path.insert(0, os.path.join(
    os.path.dirname(__file__), '../../../test_repo'))

from my_library import *  # isort:skip pylint: disable=wildcard-import, import-error

_FRAME_CACHE = {}


def f(name):
    img = _FRAME_CACHE.get(name)
    if img is None:
        import cv2
        filename = os.path.join(os.path.dirname(__file__),
                                '../../screenshots', name)
        img = cv2.imread(filename)
        assert img is not None, "Failed to load %s" % filename
        img.flags.writeable = False
        _FRAME_CACHE[name] = img
    return img


def auto_selftest_MyLibrary():
    r"""
    >>> MyLibrary(frame=f("Worldbox/My Library/Expiring Soon - Fight for Space.png"))
    MyLibrary(is_visible=True, lane=u'Expiring Soon', selection=u'Fight for Space')
    >>> MyLibrary(frame=f("Worldbox/My Library/Expiring Soon.png"))
    MyLibrary(is_visible=True, lane=u'Expiring Soon', selection=u'Moonlight')
    >>> MyLibrary(frame=f("Worldbox/My Library/Recently Watched.png"))
    MyLibrary(is_visible=True, lane=u'Recently Watched', selection=u'Toy Gun')
    >>> MyLibrary(frame=f("Worldbox/My Library/Recordings.png"))
    MyLibrary(is_visible=True, lane=u'Recordings', selection=u'(2) Clerical Errors')
    """
    pass
